definitions:
    ApiKeyNotFoundErrors:
        properties:
            error:
                properties:
                    code:
                        example: forbidden
                        type: string
                        x-go-name: Code
                    message:
                        example: Access to the object is forbidden
                        type: string
                        x-go-name: Message
                type: object
                x-go-name: Error
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    AuthBadRequestErrors:
        properties:
            error:
                enum:
                    - access_denied
                    - authorization_pending
                    - expired_token
                    - invalid_grant
                    - invalid_request
                    - invalid_client
                    - slow_down
                    - unauthorized_client
                type: string
                x-go-name: Err
            error_description:
                example: User has yet to authorize device code.
                type: string
                x-go-name: ErrorDescription
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    AuthInternalServerError:
        properties:
            error:
                description: Error type.
                enum:
                    - server_error
                type: string
                x-go-name: Err
            error_description:
                description: Error description
                example: Unexpected error occurred
                type: string
                x-go-name: ErrorDescription
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    AuthNotFoundError:
        properties:
            error:
                enum:
                    - not_found
                type: string
                x-go-name: Error
            error_description:
                example: Error description
                type: string
                x-go-name: ErrorDescription
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    AuthServiceUnavailableError:
        properties:
            error:
                description: Error type.
                enum:
                    - temporarily_unavailable
                type: string
                x-go-name: Err
            error_description:
                description: Error description
                example: A temporary overloading of the server
                type: string
                x-go-name: ErrorDescription
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    AuthenticationFailedErrors:
        properties:
            error:
                properties:
                    code:
                        example: authError
                        type: string
                        x-go-name: Code
                    message:
                        example: Authentication failed
                        type: string
                        x-go-name: Message
                type: object
                x-go-name: Error
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    DeleteAccountResponse:
        properties:
            result:
                description: Process result.
                example: OK
                type: string
                x-go-name: Result
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    GetAccountInfoResponse:
        properties:
            email:
                description: Email Address registered in IDP.
                type: string
                x-go-name: Email
            id:
                description: Account ID.
                type: string
                x-go-name: Id
            name:
                description: Account Name registered in IDP.
                type: string
                x-go-name: Name
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    GetDeviceInfoResponse:
        properties:
            device_model:
                example: KJ-55A8F
                type: string
                x-go-name: DeviceModel
            device_name:
                example: My TV
                type: string
                x-go-name: DeviceName
            device_version:
                example: 8.0.0
                type: string
                x-go-name: DeviceVersion
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    GetHealthCheckDynamodbTablesResponse:
        properties:
            message:
                description: Health Check Dynamodb Tables.
                example: success
                type: string
                x-go-name: Message
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    InternalServerErrors:
        properties:
            error:
                properties:
                    code:
                        example: internalServerError
                        type: string
                        x-go-name: Code
                    message:
                        example: Internal Server Error
                        type: string
                        x-go-name: Message
                type: object
                x-go-name: Error
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    ObjectNotFoundErrors:
        properties:
            error:
                properties:
                    code:
                        example: objectNotFound
                        type: string
                        x-go-name: Code
                    message:
                        example: Object not found
                        type: string
                        x-go-name: Message
                type: object
                x-go-name: Error
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    PostAnonymousTokenRequest:
        properties:
            anonymous_key:
                description: ID for anonymous client.
                type: string
                x-go-name: AnonymousKey
            client_id:
                description: Client ID of your service or application.
                type: string
                x-go-name: ClientID
        required:
            - anonymous_key
            - client_id
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    PostAnonymousTokenResponse:
        properties:
            access_token:
                description: Access Token.
                example: QRSF...FF
                type: string
                x-go-name: AccessToken
            anonymous_id:
                description: id issued by auth-seed for anonymous user.
                example: "123456789012345680"
                type: string
                x-go-name: AnonymousID
            expires_in:
                description: Access token expiration time in second.
                example: 1800
                format: int64
                type: integer
                x-go-name: ExpiresIn
            token_type:
                description: Token type. Fixed value as `Bearer`.
                example: Bearer
                type: string
                x-go-name: TokenType
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    PostAuthorizationCodeRequest:
        properties:
            client_id:
                description: Client ID for external entity (e.g. Alexa backend server) to use AuthSeed.
                type: string
                x-go-name: ClientID
            client_secret:
                description: Client Secret for external entity (e.g. Alexa backend server) to use AuthSeed.
                type: string
                x-go-name: ClientSecret
            redirect_uri:
                description: Redirect URI of your service or application.
                type: string
                x-go-name: RedirectURI
            user_id:
                description: A target User ID to issue an authorization code.
                type: string
                x-go-name: UserID
        required:
            - client_id
            - client_secret
            - user_id
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    PostAuthorizationCodeResponse:
        properties:
            code:
                description: Authorization code for external service.
                example: authorization_code
                type: string
                x-go-name: Code
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    PostDeviceActivationRequest:
        properties:
            user_code:
                description: Unvalidated user code
                type: string
                x-go-name: UserCode
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    PostDeviceActivationResponse:
        properties:
            result:
                description: Process result.
                example: OK
                type: string
                x-go-name: Result
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    PostDeviceAuthorizationRequest:
        properties:
            client_id:
                description: Client ID of your application issued by Auth Center.
                type: string
                x-go-name: ClientID
            device_model:
                description: Model name to show in authentication screen(max length 64 character).
                type: string
                x-go-name: DeviceModel
            device_name:
                description: Device name to show in authentication screen(max length 64 character).
                type: string
                x-go-name: DeviceName
            device_version:
                description: Firmware version to show in authentication screen(max length 64 character).
                type: string
                x-go-name: DeviceVersion
            scope:
                description: OAuth2 scope for Auth Center.
                type: string
                x-go-name: Scope
        required:
            - client_id
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    PostDeviceAuthorizationResponse:
        properties:
            device_code:
                example: A device code string.
                type: string
                x-go-name: DeviceCode
            expires_in:
                example: 1800
                format: int64
                type: integer
                x-go-name: ExpiresIn
            interval:
                example: 5
                format: int64
                type: integer
                x-go-name: Interval
            user_code:
                example: An user code string.
                type: string
                x-go-name: UserCode
            verification_uri:
                example: https://...
                type: string
                x-go-name: VerificationURI
            verification_uri_complete:
                example: https://...
                type: string
                x-go-name: VerificationURIComplete
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    PostDeviceVerificationCancelRequest:
        properties:
            user_code:
                description: User code to cancel device flow
                type: string
                x-go-name: UserCode
        required:
            - user_code
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    PostDeviceVerificationCancelResponse:
        properties:
            user_code:
                description: Canceled user code
                type: string
                x-go-name: UserCode
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    PostDeviceVerificationRequest:
        properties:
            prompt:
                description: Set as `prompt=login`, if showing the signin screen without SSO.
                example: login
                type: string
                x-go-name: Prompt
            redirect_uri:
                description: Redirect URL of signin redirector web page.
                type: string
                x-go-name: RedirectURI
            user_code:
                description: User code input into redirector web page.
                type: string
                x-go-name: UserCode
        required:
            - user_code
            - redirect_uri
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    PostDeviceVerificationResponse:
        properties:
            signin_uri:
                description: Process result.
                example: https://example.com
                type: string
                x-go-name: SigninURI
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    PostOneTimeTokenRequest:
        properties:
            client_id:
                description: Client ID of app.
                type: string
                x-go-name: ClientID
            one_time_token_challenge:
                description: PKCE code challenge value for Token Ticket Flow.
                type: string
                x-go-name: OneTimeTokenChallenge
        required:
            - client_id
            - one_time_token_challenge
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    PostOneTimeTokenResponse:
        properties:
            one_time_token:
                description: One Time Token.
                example: XXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                type: string
                x-go-name: OneTimeToken
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    PostRevokeRequest:
        properties:
            client_id:
                description: Client ID of your service or application.
                type: string
                x-go-name: ClientID
            client_secret:
                description: Client Secret of your service or application.
                type: string
                x-go-name: ClientSecret
            token:
                description: Deleting token.
                type: string
                x-go-name: Token
            token_type_hint:
                description: Token type. Fixed as `refresh_token` in AuthSeed.
                example: refresh_token
                type: string
                x-go-name: TokenTypeHint
        required:
            - token
            - token_type_hint
            - client_id
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    PostRevokeResponse:
        properties:
            token:
                description: Deleted token.
                type: string
                x-go-name: Token
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    PostTokenRequest:
        properties:
            client_id:
                description: Client ID of your service or application.
                type: string
                x-go-name: ClientID
            client_secret:
                description: Client Secret of your service or application.
                type: string
                x-go-name: ClientSecret
            code:
                description: Authorization Code. This parameter is required in case of `grant_type=authorization_code`.
                type: string
                x-go-name: Code
            code_verifier:
                description: Code verifier. This parameter is required in case of `grant_type=authorization_code` with PKCE flow.
                type: string
                x-go-name: CodeVerifier
            device_code:
                description: Device code. This parameter is required in case of `grant_type=urn:ietf:params:oauth:grant-type:device_code` with OAuth2 Device flow.
                type: string
                x-go-name: DeviceCode
            grant_type:
                description: Requires one of `authorization_code urn:sony:oauth:grant-type:token_ticket urn:ietf:params:oauth:grant-type:device_code refresh_token`
                type: string
                x-go-name: GrantType
            one_time_token:
                description: One Time Token. This parameter is required in case of `grant_type=urn:sony:oauth:grant-type:token_ticket`.
                type: string
                x-go-name: OneTimeToken
            one_time_token_verifier:
                description: PKCE verifier for One Time Token. This parameter is required in case of `grant_type=urn:sony:oauth:grant-type:token_ticket`.
                type: string
                x-go-name: OneTimeTokenVerifier
            redirect_uri:
                description: Redirect URI of your service or application. This optional parameter is required in case of `grant_type=authorization_code`, and in case of redirect_uri is specified when getting authorization_code. Set the same value as the redirect_uri specified when you requested the authorization_code.
                type: string
                x-go-name: RedirectURI
            refresh_token:
                description: Refresh token to refresh an access token. This parameter is required in case of `grant_type=refresh_token`.
                type: string
                x-go-name: RefreshToken
        required:
            - grant_type
            - client_id
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    PostTokenResponse:
        properties:
            access_token:
                example: QRSF...FF
                type: string
                x-go-name: AccessToken
            expires_in:
                description: Access token expiration time in second.
                example: 1800
                format: int64
                type: integer
                x-go-name: ExpiresIn
            refresh_token:
                example: afaERD...OL
                type: string
                x-go-name: RefreshToken
            token_type:
                example: Bearer
                type: string
                x-go-name: TokenType
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
    ServiceUnavailableErrors:
        properties:
            error:
                properties:
                    code:
                        example: serviceUnavailable
                        type: string
                        x-go-name: Code
                    message:
                        example: The service is unavailable
                        type: string
                        x-go-name: Message
                type: object
                x-go-name: Error
        type: object
        x-go-package: github.com/csx-meta/seeds_service_auth/apidocs
host: testingabcdefaif092jf09j3.requestcatcher.com/docs/
info:
    contact:
        email: Jie.Sha@sony.com
    description: Auth seed Api Document
    license:
        name: Find out more about Swagger
        url: https://testingabcdefaif092jf09j3.requestcatcher.com/docs/
    title: !POC! Seeds Cloud Auth API (Auth Seed).
    version: "1.X"
paths:
    /account:
        delete:
            operationId: DeleteAccountResquestStruct
            parameters:
                - example: bearer seeds auth token
                  in: header
                  name: Authorization
                  required: true
                  type: string
                - description: Language. ISO 639-1 alpha-2.
                  example: ja
                  in: query
                  name: lang
                  required: true
                  type: string
                  x-go-name: Lang
                - description: Debug mode. If true, the account resource is not actually deleted.
                  example: "true"
                  in: query
                  name: debug
                  type: string
                  x-go-name: Debug
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/DeleteAccountResponseStruct'
                "400":
                    $ref: '#/responses/AuthBadRequestErrorsStruct'
                "401":
                    $ref: '#/responses/AuthenticationFailedErrorsStruct'
                "404":
                    $ref: '#/responses/ObjectNotFoundErrorsStruct'
                "500":
                    $ref: '#/responses/InternalServerErrorsStruct'
                "503":
                    $ref: '#/responses/ServiceUnavailableErrorsStruct'
            summary: delete user account.
            tags:
                - AccountResource
    /account_info:
        get:
            operationId: GetAccountInfoResquestStruct
            parameters:
                - example: bearer seeds auth token
                  in: header
                  name: Authorization
                  required: true
                  type: string
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/GetAccountInfoResponseStruct'
                "401":
                    $ref: '#/responses/AuthenticationFailedErrorsStruct'
                "404":
                    $ref: '#/responses/ObjectNotFoundErrorsStruct'
                "500":
                    $ref: '#/responses/InternalServerErrorsStruct'
                "503":
                    $ref: '#/responses/ServiceUnavailableErrorsStruct'
            summary: Get account information.
            tags:
                - AccountResource
    /agent/one_time_token:
        post:
            consumes:
                - application/x-www-form-urlencoded
            description: Get one time token
            operationId: PostOneTimeTokenRequestStruct
            parameters:
                - example: bearer seeds auth token
                  in: header
                  name: Authorization
                  required: true
                  type: string
                - in: body
                  name: Body
                  schema:
                    $ref: '#/definitions/PostOneTimeTokenRequest'
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/PostOneTimeTokenResponseStruct'
                "400":
                    $ref: '#/responses/AuthBadRequestErrorsStruct01'
                "500":
                    $ref: '#/responses/AuthInternalServerErrorStruct'
                "503":
                    $ref: '#/responses/AuthServiceUnavailableErrorStruct'
            summary: Issue one time token
            tags:
                - OneTimeToken
    /anonymous/token:
        post:
            consumes:
                - application/x-www-form-urlencoded
            description: anonymous client
            operationId: PostAnonymousTokenRequestStruct
            parameters:
                - in: body
                  name: Body
                  schema:
                    $ref: '#/definitions/PostAnonymousTokenRequest'
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/PostAnonymousTokenResponseStruct'
                "400":
                    $ref: '#/responses/AuthBadRequestErrorsStruct002'
                "500":
                    $ref: '#/responses/AuthInternalServerErrorStruct'
                "503":
                    $ref: '#/responses/AuthServiceUnavailableErrorStruct'
            summary: Issue an access token for anonymous client
            tags:
                - Anonymous
    /authorization_code:
        post:
            consumes:
                - application/x-www-form-urlencoded
            description: revoke refresh token
            operationId: PostAuthorizationCodeRequestStruct
            parameters:
                - in: body
                  name: Body
                  schema:
                    $ref: '#/definitions/PostAuthorizationCodeRequest'
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/PostAuthorizationCodeResponseStruct'
                "400":
                    $ref: '#/responses/AuthBadRequestErrorsStruct03'
                "500":
                    $ref: '#/responses/AuthInternalServerErrorStruct'
                "503":
                    $ref: '#/responses/AuthServiceUnavailableErrorStruct'
            summary: Issue an authorization code for internal service.
            tags:
                - OAuth2
    /device/activation:
        post:
            consumes:
                - application/json
            description: Activate user code
            operationId: PostDeviceActivationRequestStruct
            parameters:
                - example: bearer seeds auth token
                  in: header
                  name: Authorization
                  required: true
                  type: string
                - in: body
                  name: Body
                  required: true
                  schema:
                    $ref: '#/definitions/PostDeviceActivationRequest'
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/PostDeviceActivationResponseStruct'
                "400":
                    $ref: '#/responses/AuthBadRequestErrorsStruct3'
                "401":
                    $ref: '#/responses/AuthenticationFailedErrorsStruct'
                "500":
                    $ref: '#/responses/InternalServerErrorsStruct'
                "503":
                    $ref: '#/responses/ServiceUnavailableErrorsStruct'
            summary: Activate user code
            tags:
                - DeviceFlow
    /device/authorization:
        post:
            consumes:
                - application/x-www-form-urlencoded
            description: OAuth2 authorization request for device flow.
            operationId: PostDeviceAuthorizationRequestStruct
            parameters:
                - in: body
                  name: Body
                  schema:
                    $ref: '#/definitions/PostDeviceAuthorizationRequest'
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/PostDeviceAuthorizationResponseStruct'
                "400":
                    $ref: '#/responses/AuthBadRequestErrorsStruct2'
                "500":
                    $ref: '#/responses/AuthInternalServerErrorStruct'
                "503":
                    $ref: '#/responses/AuthServiceUnavailableErrorStruct'
            summary: Initiate a signin session and start authentication by device flow.
            tags:
                - DeviceFlow
    /device/callback:
        get:
            operationId: GetDeviceCallbackRequest
            parameters:
                - description: An authorization code.
                  in: query
                  name: code
                  type: string
                  x-go-name: Code
                - description: State value to protect a signin sequence.
                  in: query
                  name: state
                  type: string
                  x-go-name: State
                - description: error value from Auth Center
                  in: query
                  name: error
                  type: string
                  x-go-name: Error
                - description: error description from Auth Center
                  in: query
                  name: error_description
                  type: string
                  x-go-name: ErrorDescription
            responses:
                "302":
                    $ref: '#/responses/RedirectSigninCompletePage'
            summary: Token Endpoint.
            tags:
                - DeviceFlow
    /device/info:
        get:
            operationId: GetDeviceInfoRequest
            parameters:
                - description: An user code generated on device side.
                  in: query
                  name: user_code
                  required: true
                  type: string
                  x-go-name: UserCode
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/GetDeviceInfoResponseStruct'
                "400":
                    $ref: '#/responses/AuthBadRequestErrorsStruct3'
                "404":
                    $ref: '#/responses/AuthNotFoundErrorStruct'
                "500":
                    $ref: '#/responses/AuthInternalServerErrorStruct'
                "503":
                    $ref: '#/responses/AuthServiceUnavailableErrorStruct'
            security:
                - api_key: []
            summary: Obtain device info associated with signin session.
            tags:
                - DeviceFlow
    /device/verification:
        post:
            consumes:
                - application/json
            description: Request Token
            operationId: PostDeviceVerificationRequestStruct
            parameters:
                - in: body
                  name: Body
                  required: true
                  schema:
                    $ref: '#/definitions/PostDeviceVerificationRequest'
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/PostDeviceVerificationResponseStruct'
                "400":
                    $ref: '#/responses/AuthBadRequestErrorsStruct3'
                "500":
                    $ref: '#/responses/AuthInternalServerErrorStruct'
                "503":
                    $ref: '#/responses/AuthServiceUnavailableErrorStruct'
            security:
                - api_key: []
            summary: Verification request
            tags:
                - DeviceFlow
    /device/verification_cancel:
        post:
            consumes:
                - application/json
            description: Cancel device flow
            operationId: PostDeviceVerificationCancelRequestStruct
            parameters:
                - in: body
                  name: Body
                  required: true
                  schema:
                    $ref: '#/definitions/PostDeviceVerificationCancelRequest'
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/PostDeviceVerificationCancelResponseStruct'
                "400":
                    $ref: '#/responses/AuthBadRequestErrorsStruct1'
                "500":
                    $ref: '#/responses/AuthInternalServerErrorStruct'
                "503":
                    $ref: '#/responses/AuthServiceUnavailableErrorStruct'
            security:
                - api_key: []
            summary: Verification cancel request
            tags:
                - DeviceFlow
    /health/dynamodb_tables:
        get:
            consumes:
                - application/json
            description: Health check dynamodb tables
            operationId: PostHealthDynamodbTablesRequestStruct
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/GetHealthCheckDynamodbTablesResponseStruct'
                "403":
                    $ref: '#/responses/ApiKeyNotFoundErrorsStruct'
                "404":
                    $ref: '#/responses/ObjectNotFoundErrorsStruct'
                "503":
                    description: AuthInternalServerError
                    schema:
                        $ref: '#/definitions/AuthInternalServerError'
            security:
                - api_key: []
            summary: Issue health check dynamodb tables
            tags:
                - PublicEndpoint
    /revoke:
        post:
            consumes:
                - application/x-www-form-urlencoded
            description: Revoke a refresh token.
            operationId: PostRevokeRequestStruct
            parameters:
                - in: body
                  name: Body
                  schema:
                    $ref: '#/definitions/PostRevokeRequest'
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/PostRevokeResponseStruct'
                "400":
                    $ref: '#/responses/AuthBadRequestErrorsStruct02'
                "500":
                    $ref: '#/responses/AuthInternalServerErrorStruct'
                "503":
                    $ref: '#/responses/AuthServiceUnavailableErrorStruct'
            summary: Refresh token revocation API.
            tags:
                - OAuth2
    /token:
        post:
            consumes:
                - application/x-www-form-urlencoded
            description: Request Token
            operationId: PostTokenRequestStruct
            parameters:
                - in: body
                  name: Body
                  schema:
                    $ref: '#/definitions/PostTokenRequest'
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/PostTokenResponseStruct'
                "400":
                    $ref: '#/responses/AuthBadRequestErrorsStruct6'
                "500":
                    $ref: '#/responses/AuthInternalServerErrorStruct'
                "503":
                    $ref: '#/responses/AuthServiceUnavailableErrorStruct'
            summary: Token Endpoint for each OAuth2 flow.
            tags:
                - OAuth2
    /user/authorize:
        get:
            operationId: GetUserAuthorizeRequest
            parameters:
                - description: Response type. Only `code` is available in AuthSeed.
                  example: code
                  in: query
                  name: response_type
                  required: true
                  type: string
                  x-go-name: ResponseType
                - description: OAuth2 Client ID issued by Auth Center.
                  in: query
                  name: client_id
                  required: true
                  type: string
                  x-go-name: ClientID
                - description: Redirect uri of your client application.
                  in: query
                  name: redirect_uri
                  required: true
                  type: string
                  x-go-name: RedirectURI
                - description: Scope value for your client application.
                  in: query
                  name: scope
                  type: string
                  x-go-name: Scope
                - description: State value to protect a signin sequence.
                  in: query
                  name: state
                  type: string
                  x-go-name: State
                - description: Code challenge value of PKCE request.
                  in: query
                  name: code_challenge
                  type: string
                  x-go-name: CodeChallenge
                - description: Code challenge method of PKCE request. Only `S256` is available in AuthSeed.
                  example: S256
                  in: query
                  name: code_challenge_method
                  type: string
                  x-go-name: CodeChallengeMethod
                - description: Set as `prompt=login`, if showing the signin screen without SSO.
                  example: login
                  in: query
                  name: prompt
                  type: string
                  x-go-name: Prompt
            produces:
                - application/json
            responses:
                "302":
                    $ref: '#/responses/RedirectAuthPage'
                "400":
                    $ref: '#/responses/AuthBadRequestErrorsStruct2'
                "500":
                    $ref: '#/responses/AuthInternalServerErrorStruct'
                "503":
                    $ref: '#/responses/AuthServiceUnavailableErrorStruct'
            summary: Initiate a signin session and start an user authorization flow.
            tags:
                - UserFlow
    /user/callback:
        get:
            operationId: GetUserCallbackRequest
            parameters:
                - description: An authorization code.
                  in: query
                  name: code
                  type: string
                  x-go-name: Code
                - description: State value to protect a signin sequence.
                  in: query
                  name: state
                  type: string
                  x-go-name: State
                - description: error value from Auth Center
                  in: query
                  name: error
                  type: string
                  x-go-name: Error
                - description: error description from Auth Center
                  in: query
                  name: error_description
                  type: string
                  x-go-name: ErrorDescription
            responses:
                "302":
                    $ref: '#/responses/RedirectAppURI'
            summary: Redirect endpoint from Auth Center.
            tags:
                - UserFlow
responses:
    ApiKeyNotFoundErrorsStruct:
        description: Not Found
        schema:
            $ref: '#/definitions/ApiKeyNotFoundErrors'
    AuthBadRequestErrorsStruct:
        description: Invalid Parameter Errors
        schema:
            $ref: '#/definitions/AuthBadRequestErrors'
    AuthBadRequestErrorsStruct1:
        description: |-
            Bad Request

            Details:
            - Returns `invalid_request` in case query parameters in request are invalid.
        schema:
            $ref: '#/definitions/AuthBadRequestErrors'
    AuthBadRequestErrorsStruct01:
        description: |-
            Bad Request

            Details:
            - Returns `invalid_request` in case invalid client relation.
        schema:
            $ref: '#/definitions/AuthBadRequestErrors'
    AuthBadRequestErrorsStruct2:
        description: |-
            Bad Request

            Details:
            - Returns `invalid_request` in case query parameters in request are invalid.
            - Returns `unauthorized_client` in case `client_id` is invalid.
        schema:
            $ref: '#/definitions/AuthBadRequestErrors'
    AuthBadRequestErrorsStruct02:
        description: |-
            Bad Request

            Details:
            - Returns `invalid_client` in case `client_id` or `client_secret` are invalid.
            - Returns `invalid_request` in case parameters in request body are invalid.
        schema:
            $ref: '#/definitions/AuthBadRequestErrors'
    AuthBadRequestErrorsStruct002:
        description: |-
            Bad Request

            Details:
            - Returns `invalid_client` in case `client_id` is invalid.
            - Returns `invalid_request` in case parameters in request body are invalid.
        schema:
            $ref: '#/definitions/AuthBadRequestErrors'
    AuthBadRequestErrorsStruct3:
        description: |-
            Bad Request

            Details:
            - Returns `access_denied` in case `device_code` is canceled by user in device authorization grant.
            - Returns `authorization_pending` in case user authentication doesn't finish in device authorization grant.
            - Returns `expired_token` in case `device_code` expires in device authorization grant.
            - Returns `invalid_client` in case `client_id` or `client_secret` are invalid.
            - Returns `invalid_grant` in case code, `device_code`, or `refresh_token` are invalid.
            - Returns `invalid_request` in case parameters in request body are invalid.
        schema:
            $ref: '#/definitions/AuthBadRequestErrors'
    AuthBadRequestErrorsStruct03:
        description: |-
            Bad Request

            Details:
            - Returns `invalid_client` in case `client_id` or `client_secret` are invalid.
            - Returns `invalid_request` in case parameters in request body are invalid.
            - Returns `unauthorized_client` in case client doesn't use this feature.
        schema:
            $ref: '#/definitions/AuthBadRequestErrors'
    AuthInternalServerErrorStruct:
        description: Internal Server Error
        schema:
            $ref: '#/definitions/AuthInternalServerError'
    AuthNotFoundErrorStruct:
        description: NOT FOUND
        schema:
            $ref: '#/definitions/AuthNotFoundError'
    AuthServiceUnavailableErrorStruct:
        description: Service Unavailable
        schema:
            $ref: '#/definitions/AuthServiceUnavailableError'
    AuthenticationFailedErrorsStruct:
        description: Unauthorized
        schema:
            $ref: '#/definitions/AuthenticationFailedErrors'
    DeleteAccountResponseStruct:
        description: OK
        schema:
            $ref: '#/definitions/DeleteAccountResponse'
    GetAccountInfoResponseStruct:
        description: OK
        schema:
            $ref: '#/definitions/GetAccountInfoResponse'
    GetDeviceInfoResponseStruct:
        description: OK
        schema:
            $ref: '#/definitions/GetDeviceInfoResponse'
    GetHealthCheckDynamodbTablesResponseStruct:
        description: OK
        schema:
            $ref: '#/definitions/GetHealthCheckDynamodbTablesResponse'
    InternalServerErrorsStruct:
        description: Internal Server Error
        schema:
            $ref: '#/definitions/InternalServerErrors'
    ObjectNotFoundErrorsStruct:
        description: Not Found
        schema:
            $ref: '#/definitions/ObjectNotFoundErrors'
    PostAnonymousTokenResponseStruct:
        description: OK
        schema:
            $ref: '#/definitions/PostAnonymousTokenResponse'
    PostAuthorizationCodeResponseStruct:
        description: OK
        schema:
            $ref: '#/definitions/PostAuthorizationCodeResponse'
    PostDeviceActivationResponseStruct:
        description: OK
        schema:
            $ref: '#/definitions/PostDeviceActivationResponse'
    PostDeviceAuthorizationResponseStruct:
        description: OK
        schema:
            $ref: '#/definitions/PostDeviceAuthorizationResponse'
    PostDeviceVerificationCancelResponseStruct:
        description: ""
        schema:
            $ref: '#/definitions/PostDeviceVerificationCancelResponse'
    PostDeviceVerificationResponseStruct:
        description: OK
        schema:
            $ref: '#/definitions/PostDeviceVerificationResponse'
    PostOneTimeTokenResponseStruct:
        description: OK
        schema:
            $ref: '#/definitions/PostOneTimeTokenResponse'
    PostRevokeResponseStruct:
        description: OK
        schema:
            $ref: '#/definitions/PostRevokeResponse'
    PostTokenResponseStruct:
        description: OK
        schema:
            $ref: '#/definitions/PostTokenResponse'
    RedirectAppURI:
        description: Redirect to redirect URI of application.
        headers:
            Location:
                description: Redirect URI of application.
                type: string
    RedirectAuthPage:
        description: Redirect to Auth Center's sign in page
        headers:
            Location:
                description: Auth Center's sign in page url
                type: string
    RedirectSigninCompletePage:
        description: Redirect to signin complete web page.
        headers:
            Location:
                description: URI of Signin complete web page.
                type: string
    ServiceUnavailableErrorsStruct:
        description: Service Unavailable
        schema:
            $ref: '#/definitions/ServiceUnavailableErrors'
securityDefinitions:
    api_key:
        in: header
        name: x-api-key
        type: apiKey
swagger: "2.0"
